#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CT2_CNW_DoAnChanGaGoiNem.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbQuanLiNem")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCART_ITEM(CART_ITEM instance);
    partial void UpdateCART_ITEM(CART_ITEM instance);
    partial void DeleteCART_ITEM(CART_ITEM instance);
    partial void InsertCHITIETHOADON(CHITIETHOADON instance);
    partial void UpdateCHITIETHOADON(CHITIETHOADON instance);
    partial void DeleteCHITIETHOADON(CHITIETHOADON instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAI(LOAI instance);
    partial void UpdateLOAI(LOAI instance);
    partial void DeleteLOAI(LOAI instance);
    partial void InsertNEM_CHATLIEU(NEM_CHATLIEU instance);
    partial void UpdateNEM_CHATLIEU(NEM_CHATLIEU instance);
    partial void DeleteNEM_CHATLIEU(NEM_CHATLIEU instance);
    partial void InsertNEM_CHUNGLOAI(NEM_CHUNGLOAI instance);
    partial void UpdateNEM_CHUNGLOAI(NEM_CHUNGLOAI instance);
    partial void DeleteNEM_CHUNGLOAI(NEM_CHUNGLOAI instance);
    partial void InsertNEM_DOCUNG(NEM_DOCUNG instance);
    partial void UpdateNEM_DOCUNG(NEM_DOCUNG instance);
    partial void DeleteNEM_DOCUNG(NEM_DOCUNG instance);
    partial void InsertNEM_DACDIEM(NEM_DACDIEM instance);
    partial void UpdateNEM_DACDIEM(NEM_DACDIEM instance);
    partial void DeleteNEM_DACDIEM(NEM_DACDIEM instance);
    partial void InsertNEM_KICHTHUOC(NEM_KICHTHUOC instance);
    partial void UpdateNEM_KICHTHUOC(NEM_KICHTHUOC instance);
    partial void DeleteNEM_KICHTHUOC(NEM_KICHTHUOC instance);
    partial void InsertNEM_THIETKE(NEM_THIETKE instance);
    partial void UpdateNEM_THIETKE(NEM_THIETKE instance);
    partial void DeleteNEM_THIETKE(NEM_THIETKE instance);
    partial void InsertNEM_THONGTINTHEM(NEM_THONGTINTHEM instance);
    partial void UpdateNEM_THONGTINTHEM(NEM_THONGTINTHEM instance);
    partial void DeleteNEM_THONGTINTHEM(NEM_THONGTINTHEM instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertSPTHICH(SPTHICH instance);
    partial void UpdateSPTHICH(SPTHICH instance);
    partial void DeleteSPTHICH(SPTHICH instance);
    partial void InsertTHUONGHIEU(THUONGHIEU instance);
    partial void UpdateTHUONGHIEU(THUONGHIEU instance);
    partial void DeleteTHUONGHIEU(THUONGHIEU instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbQuanLiNemConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CART_ITEM> CART_ITEMs
		{
			get
			{
				return this.GetTable<CART_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this.GetTable<CHITIETHOADON>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAI> LOAIs
		{
			get
			{
				return this.GetTable<LOAI>();
			}
		}
		
		public System.Data.Linq.Table<NEM_CHATLIEU> NEM_CHATLIEUs
		{
			get
			{
				return this.GetTable<NEM_CHATLIEU>();
			}
		}
		
		public System.Data.Linq.Table<NEM_CHUNGLOAI> NEM_CHUNGLOAIs
		{
			get
			{
				return this.GetTable<NEM_CHUNGLOAI>();
			}
		}
		
		public System.Data.Linq.Table<NEM_DOCUNG> NEM_DOCUNGs
		{
			get
			{
				return this.GetTable<NEM_DOCUNG>();
			}
		}
		
		public System.Data.Linq.Table<NEM_DACDIEM> NEM_DACDIEMs
		{
			get
			{
				return this.GetTable<NEM_DACDIEM>();
			}
		}
		
		public System.Data.Linq.Table<NEM_KICHTHUOC> NEM_KICHTHUOCs
		{
			get
			{
				return this.GetTable<NEM_KICHTHUOC>();
			}
		}
		
		public System.Data.Linq.Table<NEM_THIETKE> NEM_THIETKEs
		{
			get
			{
				return this.GetTable<NEM_THIETKE>();
			}
		}
		
		public System.Data.Linq.Table<NEM_THONGTINTHEM> NEM_THONGTINTHEMs
		{
			get
			{
				return this.GetTable<NEM_THONGTINTHEM>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<SPTHICH> SPTHICHes
		{
			get
			{
				return this.GetTable<SPTHICH>();
			}
		}
		
		public System.Data.Linq.Table<THUONGHIEU> THUONGHIEUs
		{
			get
			{
				return this.GetTable<THUONGHIEU>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CART_ITEM")]
	public partial class CART_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME;
		
		private string _MASANPHAM;
		
		private string _TENSANPHAM;
		
		private System.Nullable<double> _GIA;
		
		private int _SOLUONG;
		
		private long _THANHTIEN;
		
		private System.Nullable<int> _TRANGTHAI;
		
		private string _HINH;
		
		private string _KICHTHUOC;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnMASANPHAMChanging(string value);
    partial void OnMASANPHAMChanged();
    partial void OnTENSANPHAMChanging(string value);
    partial void OnTENSANPHAMChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnSOLUONGChanging(int value);
    partial void OnSOLUONGChanged();
    partial void OnTHANHTIENChanging(long value);
    partial void OnTHANHTIENChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<int> value);
    partial void OnTRANGTHAIChanged();
    partial void OnHINHChanging(string value);
    partial void OnHINHChanged();
    partial void OnKICHTHUOCChanging(string value);
    partial void OnKICHTHUOCChanged();
    #endregion
		
		public CART_ITEM()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANPHAM", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASANPHAM
		{
			get
			{
				return this._MASANPHAM;
			}
			set
			{
				if ((this._MASANPHAM != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MASANPHAM = value;
					this.SendPropertyChanged("MASANPHAM");
					this.OnMASANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSANPHAM", DbType="NVarChar(50)")]
		public string TENSANPHAM
		{
			get
			{
				return this._TENSANPHAM;
			}
			set
			{
				if ((this._TENSANPHAM != value))
				{
					this.OnTENSANPHAMChanging(value);
					this.SendPropertyChanging();
					this._TENSANPHAM = value;
					this.SendPropertyChanged("TENSANPHAM");
					this.OnTENSANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int NOT NULL")]
		public int SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="BigInt NOT NULL")]
		public long THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Int")]
		public System.Nullable<int> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINH", DbType="NVarChar(MAX)")]
		public string HINH
		{
			get
			{
				return this._HINH;
			}
			set
			{
				if ((this._HINH != value))
				{
					this.OnHINHChanging(value);
					this.SendPropertyChanging();
					this._HINH = value;
					this.SendPropertyChanged("HINH");
					this.OnHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KICHTHUOC", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KICHTHUOC
		{
			get
			{
				return this._KICHTHUOC;
			}
			set
			{
				if ((this._KICHTHUOC != value))
				{
					this.OnKICHTHUOCChanging(value);
					this.SendPropertyChanging();
					this._KICHTHUOC = value;
					this.SendPropertyChanged("KICHTHUOC");
					this.OnKICHTHUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_CART_ITEM", Storage="_KHACHHANG", ThisKey="USERNAME", OtherKey="USERNAME", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.CART_ITEMs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.CART_ITEMs.Add(this);
						this._USERNAME = value.USERNAME;
					}
					else
					{
						this._USERNAME = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CART_ITEM", Storage="_SANPHAM", ThisKey="MASANPHAM", OtherKey="MASANPHAM", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CART_ITEMs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CART_ITEMs.Add(this);
						this._MASANPHAM = value.MASANPHAM;
					}
					else
					{
						this._MASANPHAM = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHOADON")]
	public partial class CHITIETHOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHD;
		
		private string _MASANPHAM;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _GIA;
		
		private string _KICHTHUOC;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(int value);
    partial void OnMAHDChanged();
    partial void OnMASANPHAMChanging(string value);
    partial void OnMASANPHAMChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnKICHTHUOCChanging(string value);
    partial void OnKICHTHUOCChanged();
    #endregion
		
		public CHITIETHOADON()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANPHAM", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASANPHAM
		{
			get
			{
				return this._MASANPHAM;
			}
			set
			{
				if ((this._MASANPHAM != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MASANPHAM = value;
					this.SendPropertyChanged("MASANPHAM");
					this.OnMASANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KICHTHUOC", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KICHTHUOC
		{
			get
			{
				return this._KICHTHUOC;
			}
			set
			{
				if ((this._KICHTHUOC != value))
				{
					this.OnKICHTHUOCChanging(value);
					this.SendPropertyChanging();
					this._KICHTHUOC = value;
					this.SendPropertyChanged("KICHTHUOC");
					this.OnKICHTHUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHOADON", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CHITIETHOADONs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(int);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHOADON", Storage="_SANPHAM", ThisKey="MASANPHAM", OtherKey="MASANPHAM", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETHOADONs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONs.Add(this);
						this._MASANPHAM = value.MASANPHAM;
					}
					else
					{
						this._MASANPHAM = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHD;
		
		private string _USERNAME;
		
		private System.DateTime _NGAYTAO;
		
		private EntitySet<CHITIETHOADON> _CHITIETHOADONs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(int value);
    partial void OnMAHDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnNGAYTAOChanging(System.DateTime value);
    partial void OnNGAYTAOChanged();
    #endregion
		
		public HOADON()
		{
			this._CHITIETHOADONs = new EntitySet<CHITIETHOADON>(new Action<CHITIETHOADON>(this.attach_CHITIETHOADONs), new Action<CHITIETHOADON>(this.detach_CHITIETHOADONs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTAO", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYTAO
		{
			get
			{
				return this._NGAYTAO;
			}
			set
			{
				if ((this._NGAYTAO != value))
				{
					this.OnNGAYTAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYTAO = value;
					this.SendPropertyChanged("NGAYTAO");
					this.OnNGAYTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHOADON", Storage="_CHITIETHOADONs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this._CHITIETHOADONs;
			}
			set
			{
				this._CHITIETHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="USERNAME", OtherKey="USERNAME", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._USERNAME = value.USERNAME;
					}
					else
					{
						this._USERNAME = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME;
		
		private string _HOTEN;
		
		private string _EMAIL;
		
		private string _MATKHAU;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _HINH;
		
		private string _QUEQUAN;
		
		private string _THANHPHO;
		
		private System.Nullable<int> _TRANGTHAI;
		
		private System.Nullable<int> _ROLE;
		
		private EntitySet<CART_ITEM> _CART_ITEMs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<SPTHICH> _SPTHICHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnHINHChanging(string value);
    partial void OnHINHChanged();
    partial void OnQUEQUANChanging(string value);
    partial void OnQUEQUANChanged();
    partial void OnTHANHPHOChanging(string value);
    partial void OnTHANHPHOChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<int> value);
    partial void OnTRANGTHAIChanged();
    partial void OnROLEChanging(System.Nullable<int> value);
    partial void OnROLEChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._CART_ITEMs = new EntitySet<CART_ITEM>(new Action<CART_ITEM>(this.attach_CART_ITEMs), new Action<CART_ITEM>(this.detach_CART_ITEMs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._SPTHICHes = new EntitySet<SPTHICH>(new Action<SPTHICH>(this.attach_SPTHICHes), new Action<SPTHICH>(this.detach_SPTHICHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(255)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINH", DbType="NVarChar(255)")]
		public string HINH
		{
			get
			{
				return this._HINH;
			}
			set
			{
				if ((this._HINH != value))
				{
					this.OnHINHChanging(value);
					this.SendPropertyChanging();
					this._HINH = value;
					this.SendPropertyChanged("HINH");
					this.OnHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUEQUAN", DbType="NVarChar(100)")]
		public string QUEQUAN
		{
			get
			{
				return this._QUEQUAN;
			}
			set
			{
				if ((this._QUEQUAN != value))
				{
					this.OnQUEQUANChanging(value);
					this.SendPropertyChanging();
					this._QUEQUAN = value;
					this.SendPropertyChanged("QUEQUAN");
					this.OnQUEQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHPHO", DbType="NVarChar(100)")]
		public string THANHPHO
		{
			get
			{
				return this._THANHPHO;
			}
			set
			{
				if ((this._THANHPHO != value))
				{
					this.OnTHANHPHOChanging(value);
					this.SendPropertyChanging();
					this._THANHPHO = value;
					this.SendPropertyChanged("THANHPHO");
					this.OnTHANHPHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Int")]
		public System.Nullable<int> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE", DbType="Int")]
		public System.Nullable<int> ROLE
		{
			get
			{
				return this._ROLE;
			}
			set
			{
				if ((this._ROLE != value))
				{
					this.OnROLEChanging(value);
					this.SendPropertyChanging();
					this._ROLE = value;
					this.SendPropertyChanged("ROLE");
					this.OnROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_CART_ITEM", Storage="_CART_ITEMs", ThisKey="USERNAME", OtherKey="USERNAME")]
		public EntitySet<CART_ITEM> CART_ITEMs
		{
			get
			{
				return this._CART_ITEMs;
			}
			set
			{
				this._CART_ITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="USERNAME", OtherKey="USERNAME")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_SPTHICH", Storage="_SPTHICHes", ThisKey="USERNAME", OtherKey="USERNAME")]
		public EntitySet<SPTHICH> SPTHICHes
		{
			get
			{
				return this._SPTHICHes;
			}
			set
			{
				this._SPTHICHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CART_ITEMs(CART_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_CART_ITEMs(CART_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_SPTHICHes(SPTHICH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_SPTHICHes(SPTHICH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI")]
	public partial class LOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENLOAI;
		
		private string _HINH;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntitySet<THUONGHIEU> _THUONGHIEUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    partial void OnHINHChanging(string value);
    partial void OnHINHChanged();
    #endregion
		
		public LOAI()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._THUONGHIEUs = new EntitySet<THUONGHIEU>(new Action<THUONGHIEU>(this.attach_THUONGHIEUs), new Action<THUONGHIEU>(this.detach_THUONGHIEUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINH", DbType="NVarChar(255)")]
		public string HINH
		{
			get
			{
				return this._HINH;
			}
			set
			{
				if ((this._HINH != value))
				{
					this.OnHINHChanging(value);
					this.SendPropertyChanging();
					this._HINH = value;
					this.SendPropertyChanged("HINH");
					this.OnHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SANPHAM", Storage="_SANPHAMs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_THUONGHIEU", Storage="_THUONGHIEUs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<THUONGHIEU> THUONGHIEUs
		{
			get
			{
				return this._THUONGHIEUs;
			}
			set
			{
				this._THUONGHIEUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = null;
		}
		
		private void attach_THUONGHIEUs(THUONGHIEU entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = this;
		}
		
		private void detach_THUONGHIEUs(THUONGHIEU entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NEM_CHATLIEU")]
	public partial class NEM_CHATLIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACHATLIEU;
		
		private string _TENCHATLIEU;
		
		private EntitySet<NEM_THONGTINTHEM> _NEM_THONGTINTHEMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACHATLIEUChanging(string value);
    partial void OnMACHATLIEUChanged();
    partial void OnTENCHATLIEUChanging(string value);
    partial void OnTENCHATLIEUChanged();
    #endregion
		
		public NEM_CHATLIEU()
		{
			this._NEM_THONGTINTHEMs = new EntitySet<NEM_THONGTINTHEM>(new Action<NEM_THONGTINTHEM>(this.attach_NEM_THONGTINTHEMs), new Action<NEM_THONGTINTHEM>(this.detach_NEM_THONGTINTHEMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHATLIEU", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHATLIEU
		{
			get
			{
				return this._MACHATLIEU;
			}
			set
			{
				if ((this._MACHATLIEU != value))
				{
					this.OnMACHATLIEUChanging(value);
					this.SendPropertyChanging();
					this._MACHATLIEU = value;
					this.SendPropertyChanged("MACHATLIEU");
					this.OnMACHATLIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCHATLIEU", DbType="NVarChar(255)")]
		public string TENCHATLIEU
		{
			get
			{
				return this._TENCHATLIEU;
			}
			set
			{
				if ((this._TENCHATLIEU != value))
				{
					this.OnTENCHATLIEUChanging(value);
					this.SendPropertyChanging();
					this._TENCHATLIEU = value;
					this.SendPropertyChanged("TENCHATLIEU");
					this.OnTENCHATLIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NEM_CHATLIEU_NEM_THONGTINTHEM", Storage="_NEM_THONGTINTHEMs", ThisKey="MACHATLIEU", OtherKey="MACHATLIEU")]
		public EntitySet<NEM_THONGTINTHEM> NEM_THONGTINTHEMs
		{
			get
			{
				return this._NEM_THONGTINTHEMs;
			}
			set
			{
				this._NEM_THONGTINTHEMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NEM_THONGTINTHEMs(NEM_THONGTINTHEM entity)
		{
			this.SendPropertyChanging();
			entity.NEM_CHATLIEU = this;
		}
		
		private void detach_NEM_THONGTINTHEMs(NEM_THONGTINTHEM entity)
		{
			this.SendPropertyChanging();
			entity.NEM_CHATLIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NEM_CHUNGLOAI")]
	public partial class NEM_CHUNGLOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACHUNGLOAI;
		
		private string _TENCHUNGLOAI;
		
		private EntitySet<NEM_THONGTINTHEM> _NEM_THONGTINTHEMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACHUNGLOAIChanging(string value);
    partial void OnMACHUNGLOAIChanged();
    partial void OnTENCHUNGLOAIChanging(string value);
    partial void OnTENCHUNGLOAIChanged();
    #endregion
		
		public NEM_CHUNGLOAI()
		{
			this._NEM_THONGTINTHEMs = new EntitySet<NEM_THONGTINTHEM>(new Action<NEM_THONGTINTHEM>(this.attach_NEM_THONGTINTHEMs), new Action<NEM_THONGTINTHEM>(this.detach_NEM_THONGTINTHEMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUNGLOAI", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHUNGLOAI
		{
			get
			{
				return this._MACHUNGLOAI;
			}
			set
			{
				if ((this._MACHUNGLOAI != value))
				{
					this.OnMACHUNGLOAIChanging(value);
					this.SendPropertyChanging();
					this._MACHUNGLOAI = value;
					this.SendPropertyChanged("MACHUNGLOAI");
					this.OnMACHUNGLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCHUNGLOAI", DbType="NVarChar(50)")]
		public string TENCHUNGLOAI
		{
			get
			{
				return this._TENCHUNGLOAI;
			}
			set
			{
				if ((this._TENCHUNGLOAI != value))
				{
					this.OnTENCHUNGLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENCHUNGLOAI = value;
					this.SendPropertyChanged("TENCHUNGLOAI");
					this.OnTENCHUNGLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NEM_CHUNGLOAI_NEM_THONGTINTHEM", Storage="_NEM_THONGTINTHEMs", ThisKey="MACHUNGLOAI", OtherKey="MACHUNGLOAI")]
		public EntitySet<NEM_THONGTINTHEM> NEM_THONGTINTHEMs
		{
			get
			{
				return this._NEM_THONGTINTHEMs;
			}
			set
			{
				this._NEM_THONGTINTHEMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NEM_THONGTINTHEMs(NEM_THONGTINTHEM entity)
		{
			this.SendPropertyChanging();
			entity.NEM_CHUNGLOAI = this;
		}
		
		private void detach_NEM_THONGTINTHEMs(NEM_THONGTINTHEM entity)
		{
			this.SendPropertyChanging();
			entity.NEM_CHUNGLOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NEM_DOCUNG")]
	public partial class NEM_DOCUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADOCUNG;
		
		private string _TENDOCUNG;
		
		private EntitySet<NEM_THONGTINTHEM> _NEM_THONGTINTHEMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADOCUNGChanging(string value);
    partial void OnMADOCUNGChanged();
    partial void OnTENDOCUNGChanging(string value);
    partial void OnTENDOCUNGChanged();
    #endregion
		
		public NEM_DOCUNG()
		{
			this._NEM_THONGTINTHEMs = new EntitySet<NEM_THONGTINTHEM>(new Action<NEM_THONGTINTHEM>(this.attach_NEM_THONGTINTHEMs), new Action<NEM_THONGTINTHEM>(this.detach_NEM_THONGTINTHEMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADOCUNG", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADOCUNG
		{
			get
			{
				return this._MADOCUNG;
			}
			set
			{
				if ((this._MADOCUNG != value))
				{
					this.OnMADOCUNGChanging(value);
					this.SendPropertyChanging();
					this._MADOCUNG = value;
					this.SendPropertyChanged("MADOCUNG");
					this.OnMADOCUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDOCUNG", DbType="NVarChar(255)")]
		public string TENDOCUNG
		{
			get
			{
				return this._TENDOCUNG;
			}
			set
			{
				if ((this._TENDOCUNG != value))
				{
					this.OnTENDOCUNGChanging(value);
					this.SendPropertyChanging();
					this._TENDOCUNG = value;
					this.SendPropertyChanged("TENDOCUNG");
					this.OnTENDOCUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NEM_DOCUNG_NEM_THONGTINTHEM", Storage="_NEM_THONGTINTHEMs", ThisKey="MADOCUNG", OtherKey="MADOCUNG")]
		public EntitySet<NEM_THONGTINTHEM> NEM_THONGTINTHEMs
		{
			get
			{
				return this._NEM_THONGTINTHEMs;
			}
			set
			{
				this._NEM_THONGTINTHEMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NEM_THONGTINTHEMs(NEM_THONGTINTHEM entity)
		{
			this.SendPropertyChanging();
			entity.NEM_DOCUNG = this;
		}
		
		private void detach_NEM_THONGTINTHEMs(NEM_THONGTINTHEM entity)
		{
			this.SendPropertyChanging();
			entity.NEM_DOCUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NEM_DACDIEM")]
	public partial class NEM_DACDIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASANPHAM;
		
		private string _DACDIEM01;
		
		private string _DACDIEM02;
		
		private string _DACDIEM03;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASANPHAMChanging(string value);
    partial void OnMASANPHAMChanged();
    partial void OnDACDIEM01Changing(string value);
    partial void OnDACDIEM01Changed();
    partial void OnDACDIEM02Changing(string value);
    partial void OnDACDIEM02Changed();
    partial void OnDACDIEM03Changing(string value);
    partial void OnDACDIEM03Changed();
    #endregion
		
		public NEM_DACDIEM()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANPHAM", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASANPHAM
		{
			get
			{
				return this._MASANPHAM;
			}
			set
			{
				if ((this._MASANPHAM != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MASANPHAM = value;
					this.SendPropertyChanged("MASANPHAM");
					this.OnMASANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DACDIEM01", DbType="NVarChar(255)")]
		public string DACDIEM01
		{
			get
			{
				return this._DACDIEM01;
			}
			set
			{
				if ((this._DACDIEM01 != value))
				{
					this.OnDACDIEM01Changing(value);
					this.SendPropertyChanging();
					this._DACDIEM01 = value;
					this.SendPropertyChanged("DACDIEM01");
					this.OnDACDIEM01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DACDIEM02", DbType="NVarChar(255)")]
		public string DACDIEM02
		{
			get
			{
				return this._DACDIEM02;
			}
			set
			{
				if ((this._DACDIEM02 != value))
				{
					this.OnDACDIEM02Changing(value);
					this.SendPropertyChanging();
					this._DACDIEM02 = value;
					this.SendPropertyChanged("DACDIEM02");
					this.OnDACDIEM02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DACDIEM03", DbType="NVarChar(255)")]
		public string DACDIEM03
		{
			get
			{
				return this._DACDIEM03;
			}
			set
			{
				if ((this._DACDIEM03 != value))
				{
					this.OnDACDIEM03Changing(value);
					this.SendPropertyChanging();
					this._DACDIEM03 = value;
					this.SendPropertyChanged("DACDIEM03");
					this.OnDACDIEM03Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NEM_DACDIEM", Storage="_SANPHAM", ThisKey="MASANPHAM", OtherKey="MASANPHAM", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.NEM_DACDIEM = null;
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.NEM_DACDIEM = this;
						this._MASANPHAM = value.MASANPHAM;
					}
					else
					{
						this._MASANPHAM = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NEM_KICHTHUOC")]
	public partial class NEM_KICHTHUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASANPHAM;
		
		private string _KICHTHUOC;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASANPHAMChanging(string value);
    partial void OnMASANPHAMChanged();
    partial void OnKICHTHUOCChanging(string value);
    partial void OnKICHTHUOCChanged();
    #endregion
		
		public NEM_KICHTHUOC()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANPHAM", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASANPHAM
		{
			get
			{
				return this._MASANPHAM;
			}
			set
			{
				if ((this._MASANPHAM != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MASANPHAM = value;
					this.SendPropertyChanged("MASANPHAM");
					this.OnMASANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KICHTHUOC", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KICHTHUOC
		{
			get
			{
				return this._KICHTHUOC;
			}
			set
			{
				if ((this._KICHTHUOC != value))
				{
					this.OnKICHTHUOCChanging(value);
					this.SendPropertyChanging();
					this._KICHTHUOC = value;
					this.SendPropertyChanged("KICHTHUOC");
					this.OnKICHTHUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NEM_KICHTHUOC", Storage="_SANPHAM", ThisKey="MASANPHAM", OtherKey="MASANPHAM", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.NEM_KICHTHUOCs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.NEM_KICHTHUOCs.Add(this);
						this._MASANPHAM = value.MASANPHAM;
					}
					else
					{
						this._MASANPHAM = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NEM_THIETKE")]
	public partial class NEM_THIETKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATHIETKE;
		
		private string _TENTHIETKE;
		
		private EntitySet<NEM_THONGTINTHEM> _NEM_THONGTINTHEMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATHIETKEChanging(string value);
    partial void OnMATHIETKEChanged();
    partial void OnTENTHIETKEChanging(string value);
    partial void OnTENTHIETKEChanged();
    #endregion
		
		public NEM_THIETKE()
		{
			this._NEM_THONGTINTHEMs = new EntitySet<NEM_THONGTINTHEM>(new Action<NEM_THONGTINTHEM>(this.attach_NEM_THONGTINTHEMs), new Action<NEM_THONGTINTHEM>(this.detach_NEM_THONGTINTHEMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATHIETKE", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATHIETKE
		{
			get
			{
				return this._MATHIETKE;
			}
			set
			{
				if ((this._MATHIETKE != value))
				{
					this.OnMATHIETKEChanging(value);
					this.SendPropertyChanging();
					this._MATHIETKE = value;
					this.SendPropertyChanged("MATHIETKE");
					this.OnMATHIETKEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTHIETKE", DbType="NVarChar(255)")]
		public string TENTHIETKE
		{
			get
			{
				return this._TENTHIETKE;
			}
			set
			{
				if ((this._TENTHIETKE != value))
				{
					this.OnTENTHIETKEChanging(value);
					this.SendPropertyChanging();
					this._TENTHIETKE = value;
					this.SendPropertyChanged("TENTHIETKE");
					this.OnTENTHIETKEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NEM_THIETKE_NEM_THONGTINTHEM", Storage="_NEM_THONGTINTHEMs", ThisKey="MATHIETKE", OtherKey="MATHIETKE")]
		public EntitySet<NEM_THONGTINTHEM> NEM_THONGTINTHEMs
		{
			get
			{
				return this._NEM_THONGTINTHEMs;
			}
			set
			{
				this._NEM_THONGTINTHEMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NEM_THONGTINTHEMs(NEM_THONGTINTHEM entity)
		{
			this.SendPropertyChanging();
			entity.NEM_THIETKE = this;
		}
		
		private void detach_NEM_THONGTINTHEMs(NEM_THONGTINTHEM entity)
		{
			this.SendPropertyChanging();
			entity.NEM_THIETKE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NEM_THONGTINTHEM")]
	public partial class NEM_THONGTINTHEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASANPHAM;
		
		private string _MADOCUNG;
		
		private string _MATHIETKE;
		
		private string _MACHUNGLOAI;
		
		private string _MACHATLIEU;
		
		private EntityRef<NEM_CHATLIEU> _NEM_CHATLIEU;
		
		private EntityRef<NEM_CHUNGLOAI> _NEM_CHUNGLOAI;
		
		private EntityRef<NEM_DOCUNG> _NEM_DOCUNG;
		
		private EntityRef<NEM_THIETKE> _NEM_THIETKE;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASANPHAMChanging(string value);
    partial void OnMASANPHAMChanged();
    partial void OnMADOCUNGChanging(string value);
    partial void OnMADOCUNGChanged();
    partial void OnMATHIETKEChanging(string value);
    partial void OnMATHIETKEChanged();
    partial void OnMACHUNGLOAIChanging(string value);
    partial void OnMACHUNGLOAIChanged();
    partial void OnMACHATLIEUChanging(string value);
    partial void OnMACHATLIEUChanged();
    #endregion
		
		public NEM_THONGTINTHEM()
		{
			this._NEM_CHATLIEU = default(EntityRef<NEM_CHATLIEU>);
			this._NEM_CHUNGLOAI = default(EntityRef<NEM_CHUNGLOAI>);
			this._NEM_DOCUNG = default(EntityRef<NEM_DOCUNG>);
			this._NEM_THIETKE = default(EntityRef<NEM_THIETKE>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANPHAM", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASANPHAM
		{
			get
			{
				return this._MASANPHAM;
			}
			set
			{
				if ((this._MASANPHAM != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MASANPHAM = value;
					this.SendPropertyChanged("MASANPHAM");
					this.OnMASANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADOCUNG", DbType="Char(5)")]
		public string MADOCUNG
		{
			get
			{
				return this._MADOCUNG;
			}
			set
			{
				if ((this._MADOCUNG != value))
				{
					if (this._NEM_DOCUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADOCUNGChanging(value);
					this.SendPropertyChanging();
					this._MADOCUNG = value;
					this.SendPropertyChanged("MADOCUNG");
					this.OnMADOCUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATHIETKE", DbType="Char(5)")]
		public string MATHIETKE
		{
			get
			{
				return this._MATHIETKE;
			}
			set
			{
				if ((this._MATHIETKE != value))
				{
					if (this._NEM_THIETKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATHIETKEChanging(value);
					this.SendPropertyChanging();
					this._MATHIETKE = value;
					this.SendPropertyChanged("MATHIETKE");
					this.OnMATHIETKEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUNGLOAI", DbType="Char(5)")]
		public string MACHUNGLOAI
		{
			get
			{
				return this._MACHUNGLOAI;
			}
			set
			{
				if ((this._MACHUNGLOAI != value))
				{
					if (this._NEM_CHUNGLOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUNGLOAIChanging(value);
					this.SendPropertyChanging();
					this._MACHUNGLOAI = value;
					this.SendPropertyChanged("MACHUNGLOAI");
					this.OnMACHUNGLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHATLIEU", DbType="Char(5)")]
		public string MACHATLIEU
		{
			get
			{
				return this._MACHATLIEU;
			}
			set
			{
				if ((this._MACHATLIEU != value))
				{
					if (this._NEM_CHATLIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHATLIEUChanging(value);
					this.SendPropertyChanging();
					this._MACHATLIEU = value;
					this.SendPropertyChanged("MACHATLIEU");
					this.OnMACHATLIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NEM_CHATLIEU_NEM_THONGTINTHEM", Storage="_NEM_CHATLIEU", ThisKey="MACHATLIEU", OtherKey="MACHATLIEU", IsForeignKey=true)]
		public NEM_CHATLIEU NEM_CHATLIEU
		{
			get
			{
				return this._NEM_CHATLIEU.Entity;
			}
			set
			{
				NEM_CHATLIEU previousValue = this._NEM_CHATLIEU.Entity;
				if (((previousValue != value) 
							|| (this._NEM_CHATLIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NEM_CHATLIEU.Entity = null;
						previousValue.NEM_THONGTINTHEMs.Remove(this);
					}
					this._NEM_CHATLIEU.Entity = value;
					if ((value != null))
					{
						value.NEM_THONGTINTHEMs.Add(this);
						this._MACHATLIEU = value.MACHATLIEU;
					}
					else
					{
						this._MACHATLIEU = default(string);
					}
					this.SendPropertyChanged("NEM_CHATLIEU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NEM_CHUNGLOAI_NEM_THONGTINTHEM", Storage="_NEM_CHUNGLOAI", ThisKey="MACHUNGLOAI", OtherKey="MACHUNGLOAI", IsForeignKey=true)]
		public NEM_CHUNGLOAI NEM_CHUNGLOAI
		{
			get
			{
				return this._NEM_CHUNGLOAI.Entity;
			}
			set
			{
				NEM_CHUNGLOAI previousValue = this._NEM_CHUNGLOAI.Entity;
				if (((previousValue != value) 
							|| (this._NEM_CHUNGLOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NEM_CHUNGLOAI.Entity = null;
						previousValue.NEM_THONGTINTHEMs.Remove(this);
					}
					this._NEM_CHUNGLOAI.Entity = value;
					if ((value != null))
					{
						value.NEM_THONGTINTHEMs.Add(this);
						this._MACHUNGLOAI = value.MACHUNGLOAI;
					}
					else
					{
						this._MACHUNGLOAI = default(string);
					}
					this.SendPropertyChanged("NEM_CHUNGLOAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NEM_DOCUNG_NEM_THONGTINTHEM", Storage="_NEM_DOCUNG", ThisKey="MADOCUNG", OtherKey="MADOCUNG", IsForeignKey=true)]
		public NEM_DOCUNG NEM_DOCUNG
		{
			get
			{
				return this._NEM_DOCUNG.Entity;
			}
			set
			{
				NEM_DOCUNG previousValue = this._NEM_DOCUNG.Entity;
				if (((previousValue != value) 
							|| (this._NEM_DOCUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NEM_DOCUNG.Entity = null;
						previousValue.NEM_THONGTINTHEMs.Remove(this);
					}
					this._NEM_DOCUNG.Entity = value;
					if ((value != null))
					{
						value.NEM_THONGTINTHEMs.Add(this);
						this._MADOCUNG = value.MADOCUNG;
					}
					else
					{
						this._MADOCUNG = default(string);
					}
					this.SendPropertyChanged("NEM_DOCUNG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NEM_THIETKE_NEM_THONGTINTHEM", Storage="_NEM_THIETKE", ThisKey="MATHIETKE", OtherKey="MATHIETKE", IsForeignKey=true)]
		public NEM_THIETKE NEM_THIETKE
		{
			get
			{
				return this._NEM_THIETKE.Entity;
			}
			set
			{
				NEM_THIETKE previousValue = this._NEM_THIETKE.Entity;
				if (((previousValue != value) 
							|| (this._NEM_THIETKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NEM_THIETKE.Entity = null;
						previousValue.NEM_THONGTINTHEMs.Remove(this);
					}
					this._NEM_THIETKE.Entity = value;
					if ((value != null))
					{
						value.NEM_THONGTINTHEMs.Add(this);
						this._MATHIETKE = value.MATHIETKE;
					}
					else
					{
						this._MATHIETKE = default(string);
					}
					this.SendPropertyChanged("NEM_THIETKE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NEM_THONGTINTHEM", Storage="_SANPHAM", ThisKey="MASANPHAM", OtherKey="MASANPHAM", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.NEM_THONGTINTHEM = null;
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.NEM_THONGTINTHEM = this;
						this._MASANPHAM = value.MASANPHAM;
					}
					else
					{
						this._MASANPHAM = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASANPHAM;
		
		private string _TENSANPHAM;
		
		private string _MALOAI;
		
		private string _MATHUONGHIEU;
		
		private System.Nullable<double> _GIAGOC;
		
		private string _HINHMINHHOA;
		
		private System.Nullable<System.DateTime> _NGAYTAO;
		
		private string _THONGTIN;
		
		private System.Nullable<short> _MOI;
		
		private System.Nullable<double> _GIAM;
		
		private System.Nullable<double> _GIABAN;
		
		private System.Nullable<long> _SLTON;
		
		private EntitySet<CART_ITEM> _CART_ITEMs;
		
		private EntitySet<CHITIETHOADON> _CHITIETHOADONs;
		
		private EntityRef<NEM_DACDIEM> _NEM_DACDIEM;
		
		private EntitySet<NEM_KICHTHUOC> _NEM_KICHTHUOCs;
		
		private EntityRef<NEM_THONGTINTHEM> _NEM_THONGTINTHEM;
		
		private EntitySet<SPTHICH> _SPTHICHes;
		
		private EntityRef<LOAI> _LOAI;
		
		private EntityRef<THUONGHIEU> _THUONGHIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASANPHAMChanging(string value);
    partial void OnMASANPHAMChanged();
    partial void OnTENSANPHAMChanging(string value);
    partial void OnTENSANPHAMChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnMATHUONGHIEUChanging(string value);
    partial void OnMATHUONGHIEUChanged();
    partial void OnGIAGOCChanging(System.Nullable<double> value);
    partial void OnGIAGOCChanged();
    partial void OnHINHMINHHOAChanging(string value);
    partial void OnHINHMINHHOAChanged();
    partial void OnNGAYTAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTAOChanged();
    partial void OnTHONGTINChanging(string value);
    partial void OnTHONGTINChanged();
    partial void OnMOIChanging(System.Nullable<short> value);
    partial void OnMOIChanged();
    partial void OnGIAMChanging(System.Nullable<double> value);
    partial void OnGIAMChanged();
    partial void OnGIABANChanging(System.Nullable<double> value);
    partial void OnGIABANChanged();
    partial void OnSLTONChanging(System.Nullable<long> value);
    partial void OnSLTONChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CART_ITEMs = new EntitySet<CART_ITEM>(new Action<CART_ITEM>(this.attach_CART_ITEMs), new Action<CART_ITEM>(this.detach_CART_ITEMs));
			this._CHITIETHOADONs = new EntitySet<CHITIETHOADON>(new Action<CHITIETHOADON>(this.attach_CHITIETHOADONs), new Action<CHITIETHOADON>(this.detach_CHITIETHOADONs));
			this._NEM_DACDIEM = default(EntityRef<NEM_DACDIEM>);
			this._NEM_KICHTHUOCs = new EntitySet<NEM_KICHTHUOC>(new Action<NEM_KICHTHUOC>(this.attach_NEM_KICHTHUOCs), new Action<NEM_KICHTHUOC>(this.detach_NEM_KICHTHUOCs));
			this._NEM_THONGTINTHEM = default(EntityRef<NEM_THONGTINTHEM>);
			this._SPTHICHes = new EntitySet<SPTHICH>(new Action<SPTHICH>(this.attach_SPTHICHes), new Action<SPTHICH>(this.detach_SPTHICHes));
			this._LOAI = default(EntityRef<LOAI>);
			this._THUONGHIEU = default(EntityRef<THUONGHIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANPHAM", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASANPHAM
		{
			get
			{
				return this._MASANPHAM;
			}
			set
			{
				if ((this._MASANPHAM != value))
				{
					this.OnMASANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MASANPHAM = value;
					this.SendPropertyChanged("MASANPHAM");
					this.OnMASANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSANPHAM", DbType="NVarChar(50)")]
		public string TENSANPHAM
		{
			get
			{
				return this._TENSANPHAM;
			}
			set
			{
				if ((this._TENSANPHAM != value))
				{
					this.OnTENSANPHAMChanging(value);
					this.SendPropertyChanging();
					this._TENSANPHAM = value;
					this.SendPropertyChanged("TENSANPHAM");
					this.OnTENSANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(5)")]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATHUONGHIEU", DbType="Char(5)")]
		public string MATHUONGHIEU
		{
			get
			{
				return this._MATHUONGHIEU;
			}
			set
			{
				if ((this._MATHUONGHIEU != value))
				{
					if (this._THUONGHIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATHUONGHIEUChanging(value);
					this.SendPropertyChanging();
					this._MATHUONGHIEU = value;
					this.SendPropertyChanged("MATHUONGHIEU");
					this.OnMATHUONGHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAGOC", DbType="Float")]
		public System.Nullable<double> GIAGOC
		{
			get
			{
				return this._GIAGOC;
			}
			set
			{
				if ((this._GIAGOC != value))
				{
					this.OnGIAGOCChanging(value);
					this.SendPropertyChanging();
					this._GIAGOC = value;
					this.SendPropertyChanged("GIAGOC");
					this.OnGIAGOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHMINHHOA", DbType="NVarChar(255)")]
		public string HINHMINHHOA
		{
			get
			{
				return this._HINHMINHHOA;
			}
			set
			{
				if ((this._HINHMINHHOA != value))
				{
					this.OnHINHMINHHOAChanging(value);
					this.SendPropertyChanging();
					this._HINHMINHHOA = value;
					this.SendPropertyChanged("HINHMINHHOA");
					this.OnHINHMINHHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYTAO
		{
			get
			{
				return this._NGAYTAO;
			}
			set
			{
				if ((this._NGAYTAO != value))
				{
					this.OnNGAYTAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYTAO = value;
					this.SendPropertyChanged("NGAYTAO");
					this.OnNGAYTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THONGTIN", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string THONGTIN
		{
			get
			{
				return this._THONGTIN;
			}
			set
			{
				if ((this._THONGTIN != value))
				{
					this.OnTHONGTINChanging(value);
					this.SendPropertyChanging();
					this._THONGTIN = value;
					this.SendPropertyChanged("THONGTIN");
					this.OnTHONGTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOI", DbType="SmallInt")]
		public System.Nullable<short> MOI
		{
			get
			{
				return this._MOI;
			}
			set
			{
				if ((this._MOI != value))
				{
					this.OnMOIChanging(value);
					this.SendPropertyChanging();
					this._MOI = value;
					this.SendPropertyChanged("MOI");
					this.OnMOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAM", DbType="Float")]
		public System.Nullable<double> GIAM
		{
			get
			{
				return this._GIAM;
			}
			set
			{
				if ((this._GIAM != value))
				{
					this.OnGIAMChanging(value);
					this.SendPropertyChanging();
					this._GIAM = value;
					this.SendPropertyChanged("GIAM");
					this.OnGIAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Float")]
		public System.Nullable<double> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTON", DbType="BigInt")]
		public System.Nullable<long> SLTON
		{
			get
			{
				return this._SLTON;
			}
			set
			{
				if ((this._SLTON != value))
				{
					this.OnSLTONChanging(value);
					this.SendPropertyChanging();
					this._SLTON = value;
					this.SendPropertyChanged("SLTON");
					this.OnSLTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CART_ITEM", Storage="_CART_ITEMs", ThisKey="MASANPHAM", OtherKey="MASANPHAM")]
		public EntitySet<CART_ITEM> CART_ITEMs
		{
			get
			{
				return this._CART_ITEMs;
			}
			set
			{
				this._CART_ITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHOADON", Storage="_CHITIETHOADONs", ThisKey="MASANPHAM", OtherKey="MASANPHAM")]
		public EntitySet<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this._CHITIETHOADONs;
			}
			set
			{
				this._CHITIETHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NEM_DACDIEM", Storage="_NEM_DACDIEM", ThisKey="MASANPHAM", OtherKey="MASANPHAM", IsUnique=true, IsForeignKey=false)]
		public NEM_DACDIEM NEM_DACDIEM
		{
			get
			{
				return this._NEM_DACDIEM.Entity;
			}
			set
			{
				NEM_DACDIEM previousValue = this._NEM_DACDIEM.Entity;
				if (((previousValue != value) 
							|| (this._NEM_DACDIEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NEM_DACDIEM.Entity = null;
						previousValue.SANPHAM = null;
					}
					this._NEM_DACDIEM.Entity = value;
					if ((value != null))
					{
						value.SANPHAM = this;
					}
					this.SendPropertyChanged("NEM_DACDIEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NEM_KICHTHUOC", Storage="_NEM_KICHTHUOCs", ThisKey="MASANPHAM", OtherKey="MASANPHAM")]
		public EntitySet<NEM_KICHTHUOC> NEM_KICHTHUOCs
		{
			get
			{
				return this._NEM_KICHTHUOCs;
			}
			set
			{
				this._NEM_KICHTHUOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NEM_THONGTINTHEM", Storage="_NEM_THONGTINTHEM", ThisKey="MASANPHAM", OtherKey="MASANPHAM", IsUnique=true, IsForeignKey=false)]
		public NEM_THONGTINTHEM NEM_THONGTINTHEM
		{
			get
			{
				return this._NEM_THONGTINTHEM.Entity;
			}
			set
			{
				NEM_THONGTINTHEM previousValue = this._NEM_THONGTINTHEM.Entity;
				if (((previousValue != value) 
							|| (this._NEM_THONGTINTHEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NEM_THONGTINTHEM.Entity = null;
						previousValue.SANPHAM = null;
					}
					this._NEM_THONGTINTHEM.Entity = value;
					if ((value != null))
					{
						value.SANPHAM = this;
					}
					this.SendPropertyChanged("NEM_THONGTINTHEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SPTHICH", Storage="_SPTHICHes", ThisKey="MASANPHAM", OtherKey="MASANPHAM")]
		public EntitySet<SPTHICH> SPTHICHes
		{
			get
			{
				return this._SPTHICHes;
			}
			set
			{
				this._SPTHICHes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SANPHAM", Storage="_LOAI", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAI LOAI
		{
			get
			{
				return this._LOAI.Entity;
			}
			set
			{
				LOAI previousValue = this._LOAI.Entity;
				if (((previousValue != value) 
							|| (this._LOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAI.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_THUONGHIEU", ThisKey="MATHUONGHIEU", OtherKey="MATHUONGHIEU", IsForeignKey=true)]
		public THUONGHIEU THUONGHIEU
		{
			get
			{
				return this._THUONGHIEU.Entity;
			}
			set
			{
				THUONGHIEU previousValue = this._THUONGHIEU.Entity;
				if (((previousValue != value) 
							|| (this._THUONGHIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUONGHIEU.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._THUONGHIEU.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MATHUONGHIEU = value.MATHUONGHIEU;
					}
					else
					{
						this._MATHUONGHIEU = default(string);
					}
					this.SendPropertyChanged("THUONGHIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CART_ITEMs(CART_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CART_ITEMs(CART_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_NEM_KICHTHUOCs(NEM_KICHTHUOC entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_NEM_KICHTHUOCs(NEM_KICHTHUOC entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_SPTHICHes(SPTHICH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_SPTHICHes(SPTHICH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPTHICH")]
	public partial class SPTHICH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME;
		
		private string _MASANPHAM;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnMASANPHAMChanging(string value);
    partial void OnMASANPHAMChanged();
    #endregion
		
		public SPTHICH()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASANPHAM", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASANPHAM
		{
			get
			{
				return this._MASANPHAM;
			}
			set
			{
				if ((this._MASANPHAM != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MASANPHAM = value;
					this.SendPropertyChanged("MASANPHAM");
					this.OnMASANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_SPTHICH", Storage="_KHACHHANG", ThisKey="USERNAME", OtherKey="USERNAME", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.SPTHICHes.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.SPTHICHes.Add(this);
						this._USERNAME = value.USERNAME;
					}
					else
					{
						this._USERNAME = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SPTHICH", Storage="_SANPHAM", ThisKey="MASANPHAM", OtherKey="MASANPHAM", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.SPTHICHes.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.SPTHICHes.Add(this);
						this._MASANPHAM = value.MASANPHAM;
					}
					else
					{
						this._MASANPHAM = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUONGHIEU")]
	public partial class THUONGHIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATHUONGHIEU;
		
		private string _MALOAI;
		
		private string _TENTHUONGHIEU;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntityRef<LOAI> _LOAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATHUONGHIEUChanging(string value);
    partial void OnMATHUONGHIEUChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENTHUONGHIEUChanging(string value);
    partial void OnTENTHUONGHIEUChanged();
    #endregion
		
		public THUONGHIEU()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._LOAI = default(EntityRef<LOAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATHUONGHIEU", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATHUONGHIEU
		{
			get
			{
				return this._MATHUONGHIEU;
			}
			set
			{
				if ((this._MATHUONGHIEU != value))
				{
					this.OnMATHUONGHIEUChanging(value);
					this.SendPropertyChanging();
					this._MATHUONGHIEU = value;
					this.SendPropertyChanged("MATHUONGHIEU");
					this.OnMATHUONGHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(5)")]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTHUONGHIEU", DbType="NVarChar(50)")]
		public string TENTHUONGHIEU
		{
			get
			{
				return this._TENTHUONGHIEU;
			}
			set
			{
				if ((this._TENTHUONGHIEU != value))
				{
					this.OnTENTHUONGHIEUChanging(value);
					this.SendPropertyChanging();
					this._TENTHUONGHIEU = value;
					this.SendPropertyChanged("TENTHUONGHIEU");
					this.OnTENTHUONGHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_SANPHAMs", ThisKey="MATHUONGHIEU", OtherKey="MATHUONGHIEU")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_THUONGHIEU", Storage="_LOAI", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAI LOAI
		{
			get
			{
				return this._LOAI.Entity;
			}
			set
			{
				LOAI previousValue = this._LOAI.Entity;
				if (((previousValue != value) 
							|| (this._LOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI.Entity = null;
						previousValue.THUONGHIEUs.Remove(this);
					}
					this._LOAI.Entity = value;
					if ((value != null))
					{
						value.THUONGHIEUs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = null;
		}
	}
}
#pragma warning restore 1591
